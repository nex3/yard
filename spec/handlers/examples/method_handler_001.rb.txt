class Foo
  def ==(other)
    'hello' 
  end
  def /(other) 'hi' end

  attr_reader :method1

  def method1
    def dynamic; end
  end
 
  def self.method2; end

  # Docstring
  def String :: hello; "" end

  def [](key = 'default') puts key end
  def []=(key, value) end
  def 
allowed?
end

  def ` param; end
  def /(x = File.new('x', 'w'), y = 2) end
  def |; end; def =~ ()
  def -@; end; 
end
  def *(o) def +@; end
    def ~@
    end end
  def &(o) end
  def %(o) end
  def ^(o) end

  # @param a [Fixnum]
  # @overload bar(a, b = 1)
  #   @param a [String]
  #   @return [String]
  # @overload baz(b, c)
  #   @return [Fixnum]
  def foo(*args); end
end
