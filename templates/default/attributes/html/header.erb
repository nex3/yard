<div class="section <%= generator_name %>">
  <h1>Attributes</h1>

  <% ['class', 'instance'].select {|s| object.attributes[s].length > 0 }.each do |scope| %>
    <div class="<%= scope %>">
      <h2><%= scope.capitalize %> Attributes</h2>
      <table>
      <% object.attributes[scope].sort_by {|o| o.to_s.downcase }.each do |name, rw| %>
        <% aliases = (rw[:read] || rw[:write]).aliases %>
        <tr class="<%= 'hasaliases' if aliases.length > 0 %>">
          <th class='signature'>
            <span class='name'><%= h name %></span>
          </td>
          <td class="readwrite">
            [<%= ['read', 'write'].map {|t| 
                rw[t] && (rw[t].is_explicit? ? t[0,1].upcase : "<span id='#{anchor_for rw[t]}'>#{t[0,1].upcase}</span>")
              }.compact.join %>] 
          </td>
          <td class="visibility">
            <%= rw.values.compact.first.visibility %>
          </td>
          <td class="docstring">
            <%= htmlify rw.values.compact.first.docstring.summary %>
            <% if rw[:read] && rw[:read].tag(:return) && rw[:read].tag(:return).types %>
              <p class='returns'>
                Returns: 
                  <span class='return_types'>
                     <%= format_return_types rw[:read] %>
                  </span>
              </p>
            <% end %>
          </td>
        </tr>
        <% if aliases.length > 0 %>
          <tr>
            <td colspan='4' class='aliases'><span class='text'>Also known as:</span>
              <% aliases.each_with_index do |obj, i| %>
                <span class='alias'><%= h obj.name.to_s.sub(/=$/, '') %></span><%= "," if i < aliases.length - 1 %>
              <% end %>
            </td>
          </tr>
        <% end %>
      <% end %>
      </table>
    </div>
  <% end %>
</div>
